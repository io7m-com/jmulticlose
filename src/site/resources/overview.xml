<div xmlns="http://www.w3.org/1999/xhtml">
  <p class="shields">
    <a href="https://github.com/io7m/jmulticlose/actions?query=workflow%3Amain-openjdk_lts-linux">
      <img src="https://img.shields.io/github/workflow/status/io7m/jmulticlose/main-openjdk_lts-linux"
           alt="Build status"/>
    </a>
      <a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jmulticlose%22">
         <img src="https://img.shields.io/maven-central/v/com.io7m.jmulticlose/com.io7m.jmulticlose.png?style=flat-square"
              alt="Maven Central"/>
      </a>
      <a href="https://codecov.io/gh/io7m/jmulticlose">
         <img src="https://img.shields.io/codecov/c/github/io7m/jmulticlose.png?style=flat-square"
              alt="Codecov"/>
      </a>
  </p>

  <p>
    The <tt>jmulticlose</tt> package implements a simple extension to the Java
    <tt>try-with-resources</tt> statement that allows for closing many resources
    at once - without nested or compound statements - in a type-safe manner.
  </p>

  <h4>Five-second Tutorial</h4>

  <p>
    Create a <tt>CloseableCollection</tt> to track resources. Add resources to it. The
    resources will be closed when the collection is closed. All resources will be closed
    even if any of the individual resources raises an exception.
  </p>

  <p>
     <pre>  final Resource r0;
  final Resource r1;
  final Resource r2;

  try (CloseableCollectionType&lt;ClosingResourceFailedException&gt; c = CloseableCollection.create()) {
    r0 = c.add(new Resource(0));
    r1 = c.add(new Resource(1));
    r2 = c.add(new Resource(2));
  }
     </pre>
  </p>

</div>
